name: Build AMI with Packer

on:
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [ main ]
    paths:
      - 'ami.pkr.hcl'
      - 'scripts/version-server.py'
      - '.github/workflows/packer-build-ami.yml'

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: us-west-1
  AWS_ACCOUNT_ID: 928413605543
  AWS_TERRAFORM_ROLE_NAME: TerraformGithubActionRole

jobs:
  build-ami:
    name: Build custom AMI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Override configuration from repository variables
        run: |
          if [ -n "${{ vars.AWS_REGION }}" ]; then
            echo "AWS_REGION=${{ vars.AWS_REGION }}" >> "$GITHUB_ENV"
          fi
          if [ -n "${{ vars.AWS_ACCOUNT_ID }}" ]; then
            echo "AWS_ACCOUNT_ID=${{ vars.AWS_ACCOUNT_ID }}" >> "$GITHUB_ENV"
          fi
          if [ -n "${{ vars.AWS_TERRAFORM_ROLE_NAME }}" ]; then
            echo "AWS_TERRAFORM_ROLE_NAME=${{ vars.AWS_TERRAFORM_ROLE_NAME }}" >> "$GITHUB_ENV"
          fi

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: "latest"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_TERRAFORM_ROLE_NAME }}
          role-session-name: packer-build-ami
          aws-region: ${{ env.AWS_REGION }}

      - name: Initialize Packer
        run: packer init ami.pkr.hcl

      - name: Validate Packer template
        run: packer validate ami.pkr.hcl

      - name: Build AMI
        run: packer build ami.pkr.hcl

      - name: Extract AMI ID
        id: ami
        run: |
          AMI_ID=$(grep -oP 'ami-[a-z0-9]+' manifest.json | head -1 || echo "")
          if [ -z "$AMI_ID" ]; then
            echo "Failed to extract AMI ID"
            exit 1
          fi
          echo "ami_id=$AMI_ID" >> "$GITHUB_OUTPUT"
          echo "Built AMI: $AMI_ID"

      - name: Tag AMI
        run: |
          aws ec2 create-tags \
            --resources ${{ steps.ami.outputs.ami_id }} \
            --tags \
              Key=GitCommit,Value=${{ github.sha }} \
              Key=GitRef,Value=${{ github.ref }} \
              Key=BuildDate,Value=$(date -u +%Y-%m-%dT%H:%M:%SZ) \
              Key=BuiltBy,Value=GitHub-Actions

      - name: Comment AMI ID on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸŽ‰ New AMI built: \`${{ steps.ami.outputs.ami_id }}\`\n\nTo use this AMI, update the \`ami\` variable in your Terraform configuration.`
            })
